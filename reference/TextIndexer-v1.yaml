openapi: 3.0.1
info:
  title: TextIndexer-v1
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /indexer/v1/document:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  docs:
                    type: array
                    items:
                      type: string
              examples:
                example-1:
                  value:
                    docs:
                      - string+v1
      operationId: get-indexer-v1-document
    post:
      summary: ''
      operationId: post-indexer-v1-document
      responses:
        '204':
          description: No Content
      requestBody:
        content:
          text/plain:
            schema:
              type: string
            examples:
              example-1:
                value: string
      parameters:
        - schema:
            type: string
          in: query
          name: filename
        - schema:
            type: string
          in: query
          name: encoding
        - schema:
            type: string
          in: query
          name: language
  '/indexer/v1/document/{doc_id}':
    parameters:
      - schema:
          type: string
        name: doc_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
              examples:
                example-1:
                  value:
                    id: string
                    paragraphs:
                      - index: 0
                        sentences:
                          - index: string
                            text: string
                            tokens:
                              - string
      operationId: get-indexer-v1-document-doc_id
      parameters: []
  '/indexer/v1/document/{doc_id}/raw':
    parameters:
      - schema:
          type: string
        name: doc_id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
              examples:
                example-1:
                  value:
                    id: string
                    paragraphs:
                      - index: 0
                        sentences:
                          - index: string
                            text: string
                            tokens:
                              - string
      operationId: get-indexer-v1-document-doc_id-raw
      parameters: []
  /indexer/v1/words:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  word:
                    type: array
                    items:
                      $ref: '#/components/schemas/Word'
              examples:
                example-1:
                  value:
                    count: 0
                    word:
                      - id: string
                        word: string
                        encoding: string
                        language: string
                        references:
                          - document: string
                            paragraph: 0
                            start: 0
                            end: 0
                            sentence: 0
                            word: 0
      operationId: get-indexer-v1-words
      description: ''
      parameters:
        - schema:
            type: integer
          in: query
          name: skip
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: boolean
          in: query
          name: reverse
components:
  schemas:
    Word:
      title: Words
      type: object
      properties:
        id:
          type: string
        word:
          type: string
        encoding:
          type: string
        language:
          type: string
        references:
          type: array
          items:
            type: object
            properties:
              document:
                type: string
              paragraph:
                type: integer
              start:
                type: integer
              end:
                type: integer
              sentence:
                type: integer
              word:
                type: integer
    Document:
      title: Document
      type: object
      properties:
        id:
          type: string
        paragraphs:
          type: array
          items:
            type: object
            properties:
              index:
                type: integer
              sentences:
                type: array
                items:
                  type: object
                  properties:
                    index:
                      type: string
                    text:
                      type: string
                    tokens:
                      type: array
                      items:
                        type: string
