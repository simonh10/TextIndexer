openapi: 3.0.0
info:
  title: TextIndexer-v1
  version: "1.0"
servers:
- url: http://localhost:3000
paths:
  /indexer/v1/document:
    get:
      description: Get a list of document records
      operationId: get_indexer_v1_document
      parameters:
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    docs:
                    - id: skdfhaergezkrghkergkerg
                      location: https://www.gutenberg.org/files/1342/1342-0.txt
                      encoding: utf-8
                      language: english
                      title: Pride and Prejudice
                      author: Jane Austen
                      status: pending
              schema:
                $ref: '#/components/schemas/Documents'
          description: OK
      summary: Your GET endpoint
      tags: []
      x-openapi-router-controller: textindexer.server.controllers.default_controller
    post:
      description: Add a document record
      operationId: post_indexer_v1_document
      parameters: []
      requestBody:
        content:
          application/json:
            examples:
              example-1:
                value:
                  location: https://www.gutenberg.org/files/1342/1342-0.txt
                  encoding: utf-8
                  language: english
                  title: Pride and Prejudice
                  author: Jane Austen
            schema:
              $ref: '#/components/schemas/DocumentRecord'
      responses:
        "204":
          description: No Content
      x-openapi-router-controller: textindexer.server.controllers.default_controller
  /indexer/v1/document/{doc_id}:
    get:
      description: Get the document record
      operationId: get_indexer_v1_document_doc
      parameters:
      - explode: false
        in: path
        name: doc_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    id: skdfhaergezkrghkergkerg
                    location: https://www.gutenberg.org/files/1342/1342-0.txt
                    encoding: utf-8
                    language: english
                    title: Pride and Prejudice
                    author: Jane Austen
                    status: pending
              schema:
                $ref: '#/components/schemas/DocumentRecord'
          description: OK
      summary: Your GET endpoint
      tags: []
      x-openapi-router-controller: textindexer.server.controllers.default_controller
  /indexer/v1/document/{doc_id}/full:
    get:
      description: Get the document with the full text enabled
      operationId: get_indexer_v1_document_doc_id_full
      parameters:
      - explode: false
        in: path
        name: doc_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    id: skdfhaergezkrghkergkerg
                    location: https://www.gutenberg.org/files/1342/1342-0.txt
                    encoding: utf-8
                    language: english
                    title: Pride and Prejudice
                    author: Jane Austen
                    text: All the text
              schema:
                $ref: '#/components/schemas/DocumentRecord'
          description: OK
      summary: Your GET endpoint
      tags: []
      x-openapi-router-controller: textindexer.server.controllers.default_controller
  /indexer/v1/document/{doc_id}/index:
    get:
      description: Get the index record related to the document
      operationId: get_indexer_v1_document_doc_id_index
      parameters:
      - explode: false
        in: path
        name: doc_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    id: sdlfnalscnawecwavvaSV
                    paragraphs:
                    - start: 0
                      length: 250
                      tokens:
                      - token: the
                        start: 0
                    source: ZLVNDFLBKRBAVZVDHASKDVH
              schema:
                $ref: '#/components/schemas/DocumentIndex'
          description: OK
      summary: Your GET endpoint
      tags: []
      x-openapi-router-controller: textindexer.server.controllers.default_controller
  /indexer/v1/words:
    get:
      operationId: get_indexer_v1_words
      parameters:
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: reverse
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                example-1:
                  value:
                    count: 1
                    word:
                    - id: asdlcnaiecvnwaeclevvwe
                      word: the
                      encoding: utf-8
                      language: english
                      references:
                      - index: sadlfiawlenflwaec
                        source: sadlfiawlenflwaec
                        paragraph: 0
                        start: 0
                        end: 2
                        sentence: 0
                        word: 0
              schema:
                $ref: '#/components/schemas/Words'
          description: OK
      summary: Your GET endpoint
      tags: []
      x-openapi-router-controller: textindexer.server.controllers.default_controller
components:
  schemas:
    Word:
      example:
        references:
        - paragraph: 6
          start: 1
          index: index
        - paragraph: 6
          start: 1
          index: index
        language: language
        id: id
        encoding: encoding
        reference_count: 5
        word: word
      properties:
        id:
          title: id
          type: string
        word:
          title: word
          type: string
        encoding:
          title: encoding
          type: string
        language:
          title: language
          type: string
        references:
          items:
            $ref: '#/components/schemas/Word_references'
          title: references
          type: array
        reference_count:
          title: reference_count
          type: integer
      title: Word
      type: object
    DocumentIndex:
      example:
        id: id
        source: source
        paragraphs:
        - start: 0
          length: 6
          tokens:
          - start: 1
            token: token
          - start: 1
            token: token
        - start: 0
          length: 6
          tokens:
          - start: 1
            token: token
          - start: 1
            token: token
      properties:
        id:
          title: id
          type: string
        paragraphs:
          items:
            $ref: '#/components/schemas/DocumentIndex_paragraphs'
          title: paragraphs
          type: array
        source:
          description: Source Document Record
          title: source
          type: string
      title: Document
      type: object
      x-examples:
        example-1:
          id: sdlfnalscnawecwavvaSV
          paragraphs:
          - start: 0
            length: 250
            tokens:
            - token: the
              start: 0
          source: ZLVNDFLBKRBAVZVDHASKDVH
    DocumentRecord:
      example:
        author: author
        location: location
        language: language
        id: id
        text: text
        encoding: encoding
        title: title
        status: pending
      properties:
        location:
          minLength: 1
          title: location
          type: string
        encoding:
          minLength: 1
          title: encoding
          type: string
        language:
          minLength: 1
          title: language
          type: string
        title:
          minLength: 1
          title: title
          type: string
        author:
          minLength: 1
          title: author
          type: string
        id:
          title: id
          type: string
        text:
          title: text
          type: string
        status:
          enum:
          - pending
          - retrieving
          - processing
          - indexed
          title: status
          type: string
      required:
      - location
      - title
      title: DocumentRecord
      type: object
      x-examples:
        example-1:
          id: skdfhaergezkrghkergkerg
          location: https://www.gutenberg.org/files/1342/1342-0.txt
          encoding: utf-8
          language: english
          title: Pride and Prejudice
          author: Jane Austen
          text: All the text
          status: indexed
    Documents:
      example:
        documents:
          author: author
          location: location
          language: language
          id: id
          text: text
          encoding: encoding
          title: title
          status: pending
        count: 0
      properties:
        count:
          title: count
          type: integer
        documents:
          $ref: '#/components/schemas/DocumentRecord'
      title: Documents
      type: object
    Words:
      example:
        count: 0
        words:
          references:
          - paragraph: 6
            start: 1
            index: index
          - paragraph: 6
            start: 1
            index: index
          language: language
          id: id
          encoding: encoding
          reference_count: 5
          word: word
      properties:
        count:
          title: count
          type: integer
        words:
          $ref: '#/components/schemas/Word'
      title: Words
      type: object
    Word_references:
      example:
        paragraph: 6
        start: 1
        index: index
      properties:
        index:
          title: index
          type: string
        paragraph:
          title: paragraph
          type: integer
        start:
          title: start
          type: integer
      title: Word_references
      type: object
    DocumentIndex_tokens:
      example:
        start: 1
        token: token
      properties:
        token:
          title: token
          type: string
        start:
          title: start
          type: integer
      title: DocumentIndex_tokens
      type: object
    DocumentIndex_paragraphs:
      example:
        start: 0
        length: 6
        tokens:
        - start: 1
          token: token
        - start: 1
          token: token
      properties:
        start:
          title: start
          type: integer
        length:
          title: length
          type: integer
        tokens:
          items:
            $ref: '#/components/schemas/DocumentIndex_tokens'
          title: tokens
          type: array
      title: DocumentIndex_paragraphs
      type: object
