# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from textindexer.server.models.base_model_ import Model
from textindexer.server.models.document_index_tokens import DocumentIndexTokens
from textindexer.server import util

from textindexer.server.models.document_index_tokens import DocumentIndexTokens  # noqa: E501

class DocumentIndexParagraphs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, start=None, length=None, tokens=None):  # noqa: E501
        """DocumentIndexParagraphs - a model defined in OpenAPI

        :param start: The start of this DocumentIndexParagraphs.  # noqa: E501
        :type start: int
        :param length: The length of this DocumentIndexParagraphs.  # noqa: E501
        :type length: int
        :param tokens: The tokens of this DocumentIndexParagraphs.  # noqa: E501
        :type tokens: List[DocumentIndexTokens]
        """
        self.openapi_types = {
            'start': int,
            'length': int,
            'tokens': List[DocumentIndexTokens]
        }

        self.attribute_map = {
            'start': 'start',
            'length': 'length',
            'tokens': 'tokens'
        }

        self._start = start
        self._length = length
        self._tokens = tokens

    @classmethod
    def from_dict(cls, dikt) -> 'DocumentIndexParagraphs':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DocumentIndex_paragraphs of this DocumentIndexParagraphs.  # noqa: E501
        :rtype: DocumentIndexParagraphs
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start(self):
        """Gets the start of this DocumentIndexParagraphs.


        :return: The start of this DocumentIndexParagraphs.
        :rtype: int
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this DocumentIndexParagraphs.


        :param start: The start of this DocumentIndexParagraphs.
        :type start: int
        """

        self._start = start

    @property
    def length(self):
        """Gets the length of this DocumentIndexParagraphs.


        :return: The length of this DocumentIndexParagraphs.
        :rtype: int
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this DocumentIndexParagraphs.


        :param length: The length of this DocumentIndexParagraphs.
        :type length: int
        """

        self._length = length

    @property
    def tokens(self):
        """Gets the tokens of this DocumentIndexParagraphs.


        :return: The tokens of this DocumentIndexParagraphs.
        :rtype: List[DocumentIndexTokens]
        """
        return self._tokens

    @tokens.setter
    def tokens(self, tokens):
        """Sets the tokens of this DocumentIndexParagraphs.


        :param tokens: The tokens of this DocumentIndexParagraphs.
        :type tokens: List[DocumentIndexTokens]
        """

        self._tokens = tokens
