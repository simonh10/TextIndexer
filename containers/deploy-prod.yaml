apiVersion: apps/v1
kind: Deployment
metadata:
  name: indexer
  labels:
    app: indexer
spec:
  replicas: 1
  revisionHistoryLimit: 10
  minReadySeconds: 5
  selector:
    matchLabels:
      app: indexer
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  template:
    metadata:
      labels:
        app: indexer
        tier: service
    spec:
      containers:
      - name: indexer
        image: "ghcr.io/simonh10/textindexer:main"
        imagePullPolicy: Always
        resources:
          requests:
            memory: "64Mi"
            cpu: "125m"
          limits:
            memory: "128Mi"
            cpu: "250m"
        ports:
        - containerPort: 8080
        env:
        - name: PORT
          value: "8080"
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: secret-mongo-auth
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secret-mongo-auth
              key: password
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: secret-mq-auth
              key: username
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: secret-mq-auth
              key: password

---
apiVersion: v1
kind: Pod
metadata:
  name: processor1
spec:
  hostname: processor
  containers:
  - name: indexer-processor
    image: "ghcr.io/simonh10/textindexer:processor-main"
    imagePullPolicy: Always
    resources:
      requests:
        memory: "64Mi"
        cpu: "125m"
      limits:
        memory: "128Mi"
        cpu: "250m"
    env:
      - name: MONGO_INITDB_ROOT_USERNAME
        valueFrom:
          secretKeyRef:
            name: secret-mongo-auth
            key: username
      - name: MONGO_INITDB_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            name: secret-mongo-auth
            key: password
      - name: RABBITMQ_DEFAULT_USER
        valueFrom:
          secretKeyRef:
            name: secret-mq-auth
            key: username
      - name: RABBITMQ_DEFAULT_PASS
        valueFrom:
          secretKeyRef:
            name: secret-mq-auth
            key: password

---
apiVersion: v1
kind: Pod
metadata:
  name: mongo1
  labels:
    app: mongodb
spec:
  volumes:
    - name: "mongo-pv"
      persistentVolumeClaim: 
        claimName: "mongo-pvc"
  hostname: mongo
  containers:
  - name: mongo
    image: mongo
    ports:
      - containerPort: 27071
    resources:
      limits:
        memory: "128Mi"
        cpu: "500m"
    volumeMounts:
      - name: "mongo-pv"
        mountPath: "/data/db"
    env:
      - name: MONGO_INITDB_ROOT_USERNAME
        valueFrom:
          secretKeyRef:
            name: secret-mongo-auth
            key: username
      - name: MONGO_INITDB_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            name: secret-mongo-auth
            key: password
---
apiVersion: v1
kind: Pod
metadata:
  name: busybox
spec:
  hostname: busybox
  containers:
  - name: busybox
    image: ubuntu
    command:
      - sleep
      - "36000"
    resources:
      limits:
        memory: "128Mi"
        cpu: "500m"
---
apiVersion: v1
kind: Pod
metadata:
  name: mq1
  labels:
    app: rabbitmq
spec:
  volumes:
  - name: "mq-data"
    persistentVolumeClaim: 
      claimName: "mq-pvc"
  hostname: mq
  containers:
  - name: mq
    image: rabbitmq
    ports:
      - containerPort: 5671
      - containerPort: 5672
      - containerPort: 15672
    resources:
      limits:
        memory: "128Mi"
        cpu: "500m"
    volumeMounts:
      - name: "mq-data"
        mountPath: "/var/lib/rabbitmq/mnesia"
    env:
      - name: RABBITMQ_DEFAULT_USER
        valueFrom:
          secretKeyRef:
            name: secret-mq-auth
            key: username
      - name: RABBITMQ_DEFAULT_PASS
        valueFrom:
          secretKeyRef:
            name: secret-mq-auth
            key: password
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: mongo
    tier: service
spec:
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017
  selector:
    app: mongodb
---
apiVersion: v1
kind: Service
metadata:
  name: mq
  labels:
    app: mq
    tier: service
spec:
  ports:
  - name: tcp1
    port: 5672
  - name: tcp2
    port: 5671
  - name: mgt
    port: 15672
  selector:
    app: rabbitmq
---
apiVersion: v1
kind: Service
metadata:
  name: indexer
  labels:
    app: indexer
    tier: service
spec:
  type: LoadBalancer
  ports:
  - port: 8080
  selector:
    app: indexer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minimal-ingress
spec:
  rules:
  - http:
      paths:
      - path: /indexer/v1/
        pathType: Prefix
        backend:
          service:
            name: indexer
            port:
              number: 8080
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  storageClassName: openebs-hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mq-pvc
spec:
  storageClassName: openebs-hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
